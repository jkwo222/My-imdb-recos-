# File: .github/workflows/daily.yml
name: Daily Recos

on:
  workflow_dispatch:
  schedule:
    - cron: "15 12 * * *"  # 12:15 UTC daily

concurrency:
  group: daily-recos-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  issues: write

env:
  PYTHONUNBUFFERED: "1"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  DATA_DIR: data
  CACHE_DIR: data/cache
  OUTPUT_DIR: data/out/latest
  TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
  OMDB_API_KEY: ${{ secrets.OMDB_API_KEY }}
  IMDB_USER_ID: ${{ vars.IMDB_USER_ID || secrets.IMDB_USER_ID }}
  REGION: US
  LANGUAGE: en-US
  ORIGINAL_LANGS: en
  SUBS_INCLUDE: netflix,prime_video,hulu,max,disney_plus,apple_tv_plus,peacock,paramount_plus
  TMDB_PAGES_MOVIE: "200"
  TMDB_PAGES_TV: "200"
  MAX_CATALOG: "20000"
  INCLUDE_TV_SEASONS: "true"
  SKIP_WINDOW_DAYS: "4"

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Verify IMDb export exists
        run: |
          if [ ! -s "data/ratings.csv" ]; then
            echo "::error file=data/ratings.csv::Missing or empty data/ratings.csv (export from IMDb)."
            exit 1
          fi

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Prepare dirs
        run: |
          mkdir -p "$CACHE_DIR" "$OUTPUT_DIR" "data/debug"

      - name: Run engine
        run: |
          set -e
          python -m engine.runner 2>&1 | tee data/debug/runner.log

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: recos-${{ github.run_number }}
          path: |
            data/debug/runner.log
            data/out/latest/**
          if-no-files-found: warn

      - name: Create/Update "Daily picks" issue
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const core = require('@actions/core');
            const path = 'data/out/latest/assistant_feed.json';
            if (!fs.existsSync(path)) {
              core.warning('assistant_feed.json not found; skipping issue creation.');
              return;
            }
            const payload = JSON.parse(fs.readFileSync(path, 'utf8'));
            const items = Array.isArray(payload.items) ? payload.items : payload.top || [];
            const title = payload.title || `Daily picks â€” run #${process.env.GITHUB_RUN_NUMBER}`;

            const lines = [];
            lines.push(`**Run:** ${new Date().toISOString()}`);
            lines.push('');
            if (items.length) {
              lines.push('###