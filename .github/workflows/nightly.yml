name: nightly

on:
  schedule:
    - cron: "25 2 * * *"   # daily ~02:25 UTC
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
      OMDB_API_KEY: ${{ secrets.OMDB_API_KEY }}        # <- you said this exists
      REGION: US
      ORIGINAL_LANGS: en
      # keep these in the simple slugs youâ€™ve been using
      SUBS_INCLUDE: netflix,prime_video,hulu,max,disney_plus,apple_tv_plus,peacock,paramount_plus
      # optional: if you have your CSV in repo
      IMDB_RATINGS_CSV_PATH: data/ratings.csv
      # optional: if you want delta-scrape of your public ratings page
      IMDB_USER_ID: ${{ secrets.IMDB_USER_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run engine
        run: |
          python -m engine.runner

      - name: Upload artifact (latest outputs)
        uses: actions/upload-artifact@v4
        with:
          name: out
          path: data/out/latest
          if-no-files-found: warn

      # >>> THIS is the GitHub notification you want: the Job Summary
      - name: Post Top 10s to run summary
        if: always()
        shell: bash
        run: |
          echo "# Your Daily Recommendations" >> "$GITHUB_STEP_SUMMARY"
          if [ -f "data/out/latest/assistant_feed.md" ]; then
            cat "data/out/latest/assistant_feed.md" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "_No details file found (engine produced no feed?)._" >> "$GITHUB_STEP_SUMMARY"
          fi
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "Artifacts: **out** (assistant_feed.json/csv/md, telemetry.json)" >> "$GITHUB_STEP_SUMMARY"

      # Optional: also update a standing Issue to trigger GitHub notifications
      # Create the issue once manually named "Daily Recommendations" and copy its number:
      #   Settings -> Issues -> create issue; take the number (e.g. 1) into a secret RECS_ISSUE_NUMBER
      - name: Update pinned issue with latest picks
        if: ${{ secrets.RECS_ISSUE_NUMBER != '' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = 'data/out/latest/assistant_feed.md';
            const body = fs.existsSync(path)
              ? fs.readFileSync(path, 'utf8')
              : 'No feed produced.';
            const issue_number = parseInt(process.env.RECS_ISSUE_NUMBER, 10);
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number,
              body: `### ${new Date().toISOString()} \n\n` + body
            });
        env:
          RECS_ISSUE_NUMBER: ${{ secrets.RECS_ISSUE_NUMBER }}