name: nightly

on:
  schedule:
    - cron: "15 2 * * *"   # 02:15 UTC daily
  workflow_dispatch:

permissions:
  contents: write
  issues: write

jobs:
  build:
    runs-on: ubuntu-24.04

    # Map secrets -> env, then use env.* in if:
    env:
      TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
      OMDB_API_KEY: ${{ secrets.OMDB_API_KEY }}
      REGION: US
      ORIGINAL_LANGS: en
      SUBS_INCLUDE: netflix,prime_video,hulu,max,disney_plus,apple_tv_plus,peacock,paramount_plus
      MIN_MATCH_CUT: "58.0"
      # OPTIONAL: put an issue number (e.g. "1") in this repo secret
      RECS_ISSUE_NUMBER: ${{ secrets.RECS_ISSUE_NUMBER }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run recommender
        run: |
          python -m engine.runner

      - name: Upload latest artifacts
        uses: actions/upload-artifact@v4
        with:
          name: out
          path: data/out/latest
          if-no-files-found: warn

      - name: Append summary to job summary
        if: ${{ hashFiles('data/out/latest/SUMMARY.md') != '' }}
        shell: bash
        run: |
          echo "## Assistant Summary" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          cat data/out/latest/SUMMARY.md >> "$GITHUB_STEP_SUMMARY"

      # Optional: comment the summary to a GitHub Issue (uses GITHUB_TOKEN)
      - name: Comment summary to issue
        if: ${{ env.RECS_ISSUE_NUMBER != '' && hashFiles('data/out/latest/SUMMARY.md') != '' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('data/out/latest/SUMMARY.md', 'utf8');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: parseInt(process.env.RECS_ISSUE_NUMBER, 10),
              body
            });