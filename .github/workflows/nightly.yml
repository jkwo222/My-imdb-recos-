name: nightly

on:
  schedule:
    - cron: "0 3 * * *"   # 3:00 UTC daily
  workflow_dispatch: {}

permissions:
  contents: write
  issues: write

jobs:
  build:
    runs-on: ubuntu-24.04
    env:
      TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
      REGION: US
      ORIGINAL_LANGS: en
      SUBS_INCLUDE: netflix,prime_video,hulu,max,disney_plus,apple_tv_plus,peacock,paramount_plus
      MIN_MATCH_CUT: 58
      # Optional: adjust how many TMDB discover pages to pull each run
      DISCOVER_PAGES: 3

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          set -e
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run engine
        run: |
          set -e
          python -m engine.runner

      # --- Build a compact debug bundle (zip) with logs/state for analysis ---
      - name: Make debug-data.zip
        if: always()
        run: |
          set -e
          python -m engine.debug_pack

      # --- Upload primary outputs only (keeps artifact small) ---
      - name: Upload outputs (out)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: out
          path: |
            data/out/latest
          if-no-files-found: warn
          compression-level: 6
          overwrite: false

      # --- Upload the debug bundle as its own easy-to-download artifact ---
      - name: Upload debug bundle (debug-data)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-data
          path: data/out/latest/debug-data.zip
          if-no-files-found: error
          compression-level: 6
          overwrite: true

      # --- Add run summary to the job summary page ---
      - name: Add summary to run
        if: always()
        run: |
          echo "## Daily recommendations" >> "$GITHUB_STEP_SUMMARY"
          if [ -f data/out/latest/summary.md ]; then
            cat data/out/latest/summary.md >> "$GITHUB_STEP_SUMMARY"
          else
            echo "_No summary produced (data/out/latest/summary.md missing)._ " >> "$GITHUB_STEP_SUMMARY"
          fi

      # --- Post summary as a comment to a 'Daily Recommendations' issue ---
      - name: Ensure gh CLI
        if: always()
        run: |
          if ! command -v gh >/dev/null 2>&1; then
            echo "gh CLI missing."; exit 0
          fi

      - name: Create/find 'Daily Recommendations' issue and comment results
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          TITLE="Daily Recommendations"
          BODY="No summary produced for this run."
          if [ -f data/out/latest/summary.md ]; then
            BODY="$(cat data/out/latest/summary.md)"
          fi

          ISSUE_NUMBER=$(gh api -X GET repos/${{ github.repository }}/issues --paginate -q \
            '.[] | select(.state=="open" and .title=="'"$TITLE"'") | .number' | head -n1)

          if [ -z "$ISSUE_NUMBER" ]; then
            ISSUE_NUMBER=$(gh api -X POST repos/${{ github.repository }}/issues \
              -f title="$TITLE" -f body="Tracking thread for daily recommendation digests." -q '.number')
          fi

          gh api -X POST repos/${{ github.repository }}/issues/$ISSUE_NUMBER/comments \
            -f body="$BODY" >/dev/null

          echo "Commented to issue #$ISSUE_NUMBER"