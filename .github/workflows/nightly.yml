name: nightly

on:
  workflow_dispatch:
  schedule:
    - cron: "17 4 * * *" # run daily at 04:17 UTC (adjust as you like)

permissions:
  contents: read

concurrency:
  group: nightly-${{ github.ref }}
  cancel-in-progress: false

env:
  # Engine configuration
  REGION: US
  ORIGINAL_LANGS: '["en"]'   # keep quotes so YAML passes a JSON array string
  DISCOVER_PAGES: 12         # adjust if you want more/less discovery pages
  SUBS_INCLUDE: netflix,prime_video,hulu,max,disney_plus,apple_tv_plus,peacock,paramount_plus

  # Python quality of life
  PYTHONUTF8: "1"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"

jobs:
  build:
    name: build
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          check-latest: false

      - name: pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-py311-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-py311-

      - name: Install dependencies
        shell: bash
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Run engine
        shell: bash
        env:
          TMDB_ACCESS_TOKEN: ${{ secrets.TMDB_ACCESS_TOKEN }}
          IMDB_USER_ID: ${{ secrets.IMDB_USER_ID }} # optional; can be unset
        run: |
          set -euxo pipefail
          mkdir -p data/out data/cache
          python -m engine.runner
          # keep only last 5 run_* directories to avoid repo bloat
          if compgen -G "data/out/run_*" > /dev/null; then
            ls -dt data/out/run_* | tail -n +6 | xargs -r rm -rf --
          fi

      # ---------- B) Marker-based latest copy (robust & simple) ----------
      - name: Pin latest run folder (marker-based)
        shell: bash
        run: |
          set -euo pipefail
          if [[ -f data/out/last_run_dir.txt ]]; then
            run_dir="$(< data/out/last_run_dir.txt)"
            echo "Last run: ${run_dir}"
            rm -rf data/out/latest
            cp -r "${run_dir}" data/out/latest
            echo "data/out/latest contents:"
            ls -al data/out/latest || true
          else
            echo "ERROR: Marker data/out/last_run_dir.txt not found."
            echo "Existing data/out layout:"
            find data/out -maxdepth 2 -type d -print || true
            exit 1
          fi

      # Upload the “site” output (whatever your publisher expects to consume)
      - name: Upload site artifact
        uses: actions/upload-artifact@v4
        with:
          name: site-out-${{ github.run_number }}
          path: data/out/latest
          if-no-files-found: error
          retention-days: 7

      # Small but useful debug bundle
      - name: Build debug bundle
        shell: bash
        run: |
          set -euo pipefail
          rm -f debug-data.zip
          mkdir -p debug-bundle
          cp -f data/out/latest/runner.log                 debug-bundle/ || true
          cp -f data/out/latest/assistant_feed.json        debug-bundle/ || true
          cp -f data/out/latest/items.discovered.json      debug-bundle/ || true
          cp -f data/out/latest/items.enriched.json        debug-bundle/ || true
          cp -f data/out/latest/summary.md                 debug-bundle/ || true
          cp -f data/out/last_run_dir.txt                  debug-bundle/ || true
          # capture env snapshot for debugging
          {
            echo "REGION=${REGION}"
            echo "SUBS_INCLUDE=${SUBS_INCLUDE}"
            echo "ORIGINAL_LANGS=${ORIGINAL_LANGS}"
            echo "DISCOVER_PAGES=${DISCOVER_PAGES}"
          } > debug-bundle/env.txt
          (cd debug-bundle && zip -q -r ../debug-data.zip .)
          ls -lh debug-data.zip || true

      - name: Upload debug bundle
        uses: actions/upload-artifact@v4
        with:
          name: debug-data-${{ github.run_number }}
          path: debug-data.zip
          retention-days: 14