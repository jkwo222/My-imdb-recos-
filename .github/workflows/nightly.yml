name: nightly

on:
  workflow_dispatch:
  schedule:
    - cron: "17 3 * * *"  # daily 03:17 UTC

env:
  PAGES_MOVIES: ${{ vars.PAGES_MOVIES || '120' }}
  PAGES_TV: ${{ vars.PAGES_TV || '120' }}
  OMDB_WORKERS: ${{ vars.OMDB_WORKERS || '8' }}
  CATALOG_TTL_DAYS: ${{ vars.CATALOG_TTL_DAYS || '7' }}
  PROVIDERS_TTL_DAYS: ${{ vars.PROVIDERS_TTL_DAYS || '1' }}
  OMDB_TTL_DAYS: ${{ vars.OMDB_TTL_DAYS || '14' }}

jobs:
  run:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      issues: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache data
        uses: actions/cache@v4
        with:
            path: |
              data/cache
              data/catalog
            key: cache-${{ runner.os }}-${{ hashFiles('engine/**', 'requirements.txt') }}
            restore-keys: |
              cache-${{ runner.os }}-

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run engine
        env:
          IMDB_USER_ID: ${{ secrets.IMDB_USER_ID }}          # e.g., ur18684433
          IMDB_RATINGS_URL: ${{ secrets.IMDB_RATINGS_URL }}  # optional
          IMDB_RATINGS_CSV_URL: ${{ secrets.IMDB_RATINGS_CSV_URL }}  # optional
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
          OMDB_API_KEY: ${{ secrets.OMDB_API_KEY }}
          PAGES_MOVIES: ${{ env.PAGES_MOVIES }}
          PAGES_TV: ${{ env.PAGES_TV }}
          OMDB_WORKERS: ${{ env.OMDB_WORKERS }}
          CATALOG_TTL_DAYS: ${{ env.CATALOG_TTL_DAYS }}
          PROVIDERS_TTL_DAYS: ${{ env.PROVIDERS_TTL_DAYS }}
          OMDB_TTL_DAYS: ${{ env.OMDB_TTL_DAYS }}
        run: |
          python -m engine.runner

      - name: Upload results artifact
        uses: actions/upload-artifact@v4
        with:
          name: results-${{ github.run_id }}
          path: data/out/daily

      - name: Post Top 10 as an issue (push notification)
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = 'data/out/daily/' + new Date().toISOString().slice(0,10) + '/recs.json';
            const telemetryPath = 'data/out/daily/' + new Date().toISOString().slice(0,10) + '/telemetry.json';
            const recs = JSON.parse(fs.readFileSync(path, 'utf8')).recs || [];
            const telem = JSON.parse(fs.readFileSync(telemetryPath, 'utf8'));
            const lines = [];
            lines.push(`Run: https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`);
            lines.push(``);
            lines.push(`Top 10`);
            for (let i=0; i<Math.min(10,recs.length); i++) {
              const r = recs[i];
              lines.push(`${String(i+1).padStart(2,' ')}. ${r.match} — ${r.title} (${r.year||'—'}) [${r.type}]`);
            }
            lines.push(``);
            lines.push(`Telemetry: pool=${telem.eligible_unseen}, considered=${telem.considered}, shortlist=${telem.shortlist}, shown=${telem.shown}`);
            lines.push(``);
            lines.push(`This product uses the TMDB API but is not endorsed or certified by TMDB.`);
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Run: ${context.runId}`,
              body: lines.join('\n')
            });